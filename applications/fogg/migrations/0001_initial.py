# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-04 12:54
from __future__ import unicode_literals

import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import sazed.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('talos', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False, unique=True)),
                ('iso2', models.CharField(max_length=2)),
                ('iso3', models.CharField(max_length=3)),
                ('isoN', models.CharField(max_length=3)),
                ('fips', models.CharField(max_length=2)),
                ('continent', models.CharField(choices=[('EU', 'Europe'), ('AS', 'Asia'), ('NA', 'North America'), ('AF', 'Africa'), ('OC', 'Ocean'), ('SA', 'South America'), ('AN', 'Antarctica')], max_length=2)),
                ('tld', models.CharField(max_length=8)),
                ('currency_code', models.CharField(max_length=3)),
                ('phone_number_prefix', models.CharField(max_length=255)),
                ('phone_number_regex', models.CharField(max_length=255)),
                ('postal_code_format', models.CharField(max_length=255)),
                ('postal_code_regex', models.CharField(max_length=255)),
                ('geoname_id', models.PositiveIntegerField()),
                ('_name_localizations', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='_name_localizations')),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'verbose_name': 'Country',
            },
            bases=(models.Model, sazed.models.AbstractLocalizableMixin),
        ),
        migrations.CreateModel(
            name='CountryDivision',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('code', models.CharField(max_length=255)),
                ('latitude_min', models.DecimalField(decimal_places=8, max_digits=12)),
                ('latitude_max', models.DecimalField(decimal_places=8, max_digits=12)),
                ('longitude_min', models.DecimalField(decimal_places=8, max_digits=12)),
                ('longitude_max', models.DecimalField(decimal_places=8, max_digits=12)),
                ('geoname_id', models.PositiveIntegerField(blank=True, null=True)),
                ('_name_localizations', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='_name_localizations')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='fogg.Country')),
            ],
            options={
                'verbose_name_plural': 'Country Divisions',
                'verbose_name': 'Country Division',
            },
            bases=(models.Model, sazed.models.AbstractLocalizableMixin),
        ),
        migrations.CreateModel(
            name='CountryDivisionType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('code', models.CharField(max_length=255)),
                ('_name_localizations', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='_name_localizations')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='fogg.Country')),
            ],
            options={
                'verbose_name_plural': 'Country Division Types',
                'verbose_name': 'Country Division Type',
            },
            bases=(models.Model, sazed.models.AbstractLocalizableMixin),
        ),
        migrations.CreateModel(
            name='PostalZone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('code', models.CharField(max_length=255)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='fogg.Country')),
            ],
            options={
                'verbose_name_plural': 'Postal Zones',
                'verbose_name': 'Postal Zone',
            },
        ),
        migrations.CreateModel(
            name='RoleModelPermission_Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.ModelPermission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.Role')),
            ],
        ),
        migrations.CreateModel(
            name='RoleModelPermission_CountryDivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.ModelPermission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.Role')),
            ],
        ),
        migrations.CreateModel(
            name='RoleModelPermission_CountryDivisionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.ModelPermission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.Role')),
            ],
        ),
        migrations.CreateModel(
            name='RoleModelPermission_PostalZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.ModelPermission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='talos.Role')),
            ],
        ),
        migrations.AddField(
            model_name='countrydivision',
            name='country_division_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='fogg.CountryDivisionType'),
        ),
        migrations.AddField(
            model_name='countrydivision',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='fogg.CountryDivision'),
        ),
        migrations.AddField(
            model_name='countrydivision',
            name='postal_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='fogg.PostalZone'),
        ),
        migrations.AlterUniqueTogether(
            name='rolemodelpermission_postalzone',
            unique_together=set([('role', 'permission')]),
        ),
        migrations.AlterIndexTogether(
            name='rolemodelpermission_postalzone',
            index_together=set([('permission', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='rolemodelpermission_countrydivisiontype',
            unique_together=set([('role', 'permission')]),
        ),
        migrations.AlterIndexTogether(
            name='rolemodelpermission_countrydivisiontype',
            index_together=set([('permission', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='rolemodelpermission_countrydivision',
            unique_together=set([('role', 'permission')]),
        ),
        migrations.AlterIndexTogether(
            name='rolemodelpermission_countrydivision',
            index_together=set([('permission', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='rolemodelpermission_country',
            unique_together=set([('role', 'permission')]),
        ),
        migrations.AlterIndexTogether(
            name='rolemodelpermission_country',
            index_together=set([('permission', 'role')]),
        ),
    ]
